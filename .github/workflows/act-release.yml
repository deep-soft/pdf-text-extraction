name: act-release

on:
  workflow_dispatch:
#  push:
#    branches: [ "*" ]
#  pull_request:
#    branches: [ "master" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  TAG_NAME: 'pdf-text-extract'
  VERSION: 'v1.0.0'

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ${{ matrix.job.os }}
    strategy:
      fail-fast: false
      matrix:
        job:
          - { os: macos-11       }
          - { os: macos-12       }
          - { os: macos-13       }
          - { os: macos-latest   }
          - { os: ubuntu-20.04   }
          - { os: ubuntu-22.04   }
          - { os: ubuntu-latest  }
          - { os: windows-2019   }
          - { os: windows-2022   }
          - { os: windows-latest }

    steps:
      - uses: deep-soft/checkout@v3

      - name: Configure CMake
        # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Build
        # Build your program with the given configuration
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

# zip release begin
      - name: Create Zip Archive Release
        continue-on-error: true
        uses: deep-soft/zip-release@v2
        with:
          type: 'zip'
          filename: '${{ env.TAG_NAME }}-${{ env.VERSION }}-${{ matrix.job.os }}.zip'
          directory: 'build'
          exclusions: '*.map *.pdb'
          recursive_exclusions: '*.map *.pdb'
          path: 'TextExtraction* textextraction*'
          env_variable: 'ZIP_RELEASE_ARCHIVE'
        # archive name is ${{ env.ZIP_RELEASE_ARCHIVE }}

      - name: Publish
        continue-on-error: true
        uses: deep-soft/action-gh-release@v1
        with:
          tag_name: ${{ env.TAG_NAME }}-${{ env.VERSION }}
          files: |
            ${{ env.ZIP_RELEASE_ARCHIVE }}
# zip release end

# zip release begin
      - name: Create Zip Archive Release - ALL
        continue-on-error: true
        uses: deep-soft/zip-release@v2
        with:
          type: 'zip'
          filename: '${{ env.TAG_NAME }}-${{ env.VERSION }}-${{ matrix.job.os }}-ALL.zip'
          directory: '.'
          exclusions: ''
          recursive_exclusions: ''
          path: '.'
          env_variable: 'ZIP_RELEASE_ARCHIVE_ALL'
        # archive name is ${{ env.ZIP_RELEASE_ARCHIVE_ALL }}

      - name: Publish
        continue-on-error: true
        uses: deep-soft/action-gh-release@v1
        with:
          tag_name: ${{ env.TAG_NAME }}-ALL
          files: |
            ${{ env.ZIP_RELEASE_ARCHIVE_ALL }}
# zip release end

      - name: Test
        working-directory: ${{github.workspace}}/build
        # Execute tests defined by the CMake configuration.
        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
        run: ctest -C ${{env.BUILD_TYPE}} --output-on-failure
